Adaptable Query Optimization and Evaluation in Temporal Middleware Time-referenced data are pervasive in most real-world databases. Recent advances in temporal query languages  show that such database applications may benefit substantially from built-in temporal support in the  DBMS. To achieve this, temporal query optimization and evaluation mechanisms must be provided, either within  the DBMS proper or as a source level translation from temporal queries to conventional SQL. This paper proposes  a new approach: using a middleware component on top of a conventional DBMS. This component accepts  temporal SQL statements and produces a corresponding query plan consisting of algebraic as well as regular SQL  parts. The algebraic parts are processed by the middleware, while the SQL parts are processed by the DBMS.  The middleware uses performance feedback from the DBMS to adapt its partitioning of subsequent queries into  middleware and DBMS parts. The paper describes the architecture and implementation of the temporal middleware  component, termed TANGO, which is based on the Volcano extensible query optimizer and the XXL query  processing library. Experiments with the system demonstrate the utility of the middleware`s internal processing  capability and its cost-based mechanism for apportioning the processing between the middleware and the  underlying DBMS.  Index terms: temporal databases, query processing and optimization, cost-based optimization, middleware  1 
