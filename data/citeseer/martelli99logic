A Logic Programming Framework for Component-Based Software Prototyping The paper presents CaseLP, a logic-based prototyping environment for specifying and verifying  complex distributed applications. CaseLP provides a set of languages for modeling intelligent  and interacting components (agents) at different levels of abstraction. It also furnishes  tools for integrating legacy software into a prototype.  The possibility of integrating, into the same executable prototype, agents which are only  specified as well as already developed components can prove extremely useful in the engineering  process of complex applications. In fact, the reusability of existing components can be verified  before the application has been implemented and the developer can be more confident on the  correctness of the new components specification, if it has been executed and tested by means  of an interaction with the existing components.  Besides the aspects of integration and reuse, CaseLP also faces another fundamental issue of  nowadays applications, namely distribution. The...
