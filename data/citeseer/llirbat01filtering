Filtering Algorithms and Implementation for Very Fast Publish/Subscribe Systems Publish/Subscribe is the paradigm in which users express long-term interests (\subscriptions") and some agent \publishes " events (e.g., oers). The job of Publish/Subscribe software is to send events to the owners of subscriptions satis  ed by those events. For example, a user subscription may consist of an interest in an airplane of a certain type, not to exceed a certain price. A published event may consist of an oer of an airplane with certain properties including price. Each subscription consists of a conjunction of (attribute, comparison operator, value) predicates. A subscription closely resembles a trigger in that it is a longlived conditional query associated with an action (usually, informing the subscriber). However, it is less general than a trigger so novel data structures and implementations may enable the creation of more scalable, high performance publish /subscribe systems. This paper describes an attempt at the construction of such algorithms and its implementation. Using a combination of data structures, application-speci  c caching policies, and application-speci  c query processing our system can handle 600 events per second for a typical workload containing 6 million subscriptions.
