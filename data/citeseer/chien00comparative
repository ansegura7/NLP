A Comparative Study of Version Management Schemes for XML Documents The problem of managing multiple versions for XML documents and semistructured data is of significant  interest in many DB applications and web-related services. Traditional document version control  schemes, such as RCS, suffer from the following two problems. At the logical level, they conceal the  structure of the documents by modeling them as sequences of text lines, and storing a document's evolution  as a line-edit script. At the physical level, they can incur in severe storage or processing costs  because of their inability to trade-off storage with computation. To solve these problems, we propose  version management strategies that preserve the structure of the original document, and apply and extend  DB techniques to minimize storage and processing costs. Therefore, we propose and compare three  schemes for XML version management, namely, the Usefulness-Based Copy Control, the Multiversion  B-Tree, and the Partially Persistent List Method. A common characteristic of these schemes is that  they cluster data using the notion of page usefulness, which by selectively copying current information  from obsolete pages provides for fast version reconstruction with minimal storage overhead. The cost  and performance of these version management schemes are evaluated and compared through extensive  analysis and experimentation.  
