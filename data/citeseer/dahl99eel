The Eel Programming Language and Internal Concurrency in Logic Agents This paper describes work done on creating the logic programming language  Eel. The language is designed for implementing agents with a behaviour based,  concurrent internal architecture. The paper also suggests a new such architecture  which improves on the ones currently available. It gives examples of how  parts of that architecture are implemented in Eel and comments that the Agent  Oriented Programming paradigm currently contains two different metaphors for  concurrency.  Eel's event based approach to process communication and process initiation  introduces an explicit representation of state to a logic program. A new declarative  approach to object states is demonstrated as a part of the object oriented implementation  of the suggested agent architecture.  As well as being a programming language, Eel is a formalism which is well  suited for logic based machine learning of behaviour and interaction. This paper  briefly outlines the scope for using such learning to improve on exist...
