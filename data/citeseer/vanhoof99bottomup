Bottom-up Partial Deduction of Logic Programs In this paper, we develop a solid theoretical foundation for a bottom-up program transformation, capable of specialising a logic program with respect to a set of unit clauses. Extending a well-known operator, we define a bottom-up partial deduction operator and prove correctness of the transformation with respect to the S-semantics. We also show how, within this framework, a concrete control strategy can be designed. The transformation can be used as a stand-alone specialisation technique, useful when a program needs to be specialised with respect to its internal structure (e.g., a library of predicates with respect to an abstract data type) instead of a single goal. Moreover, the bottom-up transformation can be usefully combined with a more traditional top-down partial deduction strategy.
